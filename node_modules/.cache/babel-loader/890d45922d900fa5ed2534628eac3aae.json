{"remainingRequest":"/home/views/buoy-view/node_modules/babel-loader/lib/index.js!/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/buoy-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/buoy-view/src/views/asset/task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/buoy-view/src/views/asset/task.vue","mtime":1611741447510},{"path":"/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js","mtime":1610763497078},{"path":"/home/views/buoy-view/node_modules/babel-loader/lib/index.js","mtime":1610763501811},{"path":"/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js","mtime":1610763497078},{"path":"/home/views/buoy-view/node_modules/vue-loader/lib/index.js","mtime":1610763501867},{"path":"/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js","mtime":1610763497078},{"path":"/home/views/buoy-view/node_modules/babel-loader/lib/index.js","mtime":1610763501811},{"path":"/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js","mtime":1610763497078},{"path":"/home/views/buoy-view/node_modules/vue-loader/lib/index.js","mtime":1610763501867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVGFza0FkZCB9IGZyb20gIkAvYXBpL3Rhc2siOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRWRpdFBhZ2U6IGZhbHNlLAogICAgICAvL+aYr+WIm+W7uui/mOaYr+S/ruaUueS7u+WKoeeahOmhtemdou+8nwogICAgICBzdWJtaXRCdG5EaXNhYmxlZDogZmFsc2UsCiAgICAgIHRpdGxlOiAi5Yib5bu65riX6YCP5Lu75YqhIiwKICAgICAgZm9ybTogewogICAgICAgIC8vIOWIm+W7uuS7u+WKoeaPkOS6pOeahOihqOWNlQogICAgICAgICJhdXRoX3NjYW4iOiAwLAogICAgICAgICJuYW1lIjogIiIsCiAgICAgICAgInBvY19zY2FuIjogMCwKICAgICAgICAicmVjdXJzaW9uIjogMCwKICAgICAgICAidGFyZ2V0X2xpc3QiOiAiIiwKICAgICAgICAidHJhcF9zY2FuIjogMCwKICAgICAgICAicnVsZV9pZCI6IDAsCiAgICAgICAgIndlYl9zY2FuIjogMAogICAgICB9LAogICAgICB0YXNrX2lkOiB1bmRlZmluZWQKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIGlkID0gdGhpcy4kcm91dGUucXVlcnkuaWQ7CgogICAgaWYgKGlkKSB7CiAgICAgIC8v54K55Ye75L+u5pS56aG16Z2i55qE6Lez6L2saWQgdXJp5Y+C5pWwKD9pZD02NCkKICAgICAgLy8g5aaC5p6c5pyJaWQs5p+lRELov5vooYzotYvlgLwKICAgICAgdGhpcy50aXRsZSA9ICLkv67mlLnmjqLmtYvku7vliqEiOwogICAgICB0aGlzLmlzRWRpdFBhZ2UgPSB0cnVlOwogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMudGFza19pZCA9IGlkOwogICAgICB0aGlzLmdldERldGFpbChpZCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDooajmoLzmoLzlvI/mo4Dmn6UKICAgIGZvcm1DaGVjazogZnVuY3Rpb24gZm9ybUNoZWNrKCkgewogICAgICBpZiAodGhpcy5mb3JtLm5hbWUudHJpbSgpID09ICIiKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiAi5Lu75Yqh5ZCN5b+F5aGrIiwKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIgogICAgICAgIH0pOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZm9ybS50YXJnZXRfbGlzdC50cmltKCkgPT0gIiIpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICLnm67moIflv4XloasiLAogICAgICAgICAgdHlwZTogIndhcm5pbmciCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICAvLyDlhbPpl63lrZDpobUKICAgIGNsb3NlQ2hpbGRQYWdlOiBmdW5jdGlvbiBjbG9zZUNoaWxkUGFnZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJHJvdXRlci5nbygtMSk7CiAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLnRhZ3NWaWV3LnZpc2l0ZWRWaWV3cy5zcGxpY2UodGhpcy4kc3RvcmUuc3RhdGUudGFnc1ZpZXcudmlzaXRlZFZpZXdzLmZpbmRJbmRleChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnBhdGggPT09IF90aGlzLiRyb3V0ZS5wYXRoOwogICAgICB9KSwgMSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMuJHN0b3JlLnN0YXRlLnRhZ3NWaWV3LnZpc2l0ZWRWaWV3c1t0aGlzLiRzdG9yZS5zdGF0ZS50YWdzVmlldy52aXNpdGVkVmlld3MubGVuZ3RoIC0gMV0ucGF0aCk7CiAgICB9LAogICAgLy8g5pu05paw5Lu75YqhCiAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoKSB7CiAgICAgIGlmICghdGhpcy5mb3JtQ2hlY2soKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5zdWJtaXRCdG5EaXNhYmxlZCA9IHRydWU7IC8vMS7nu4Too4XmlbDmja4KCiAgICAgIHZhciB0ZW1wID0gdGhpcy5mb3JtOwogICAgICB2YXIgcG9ydF9saXN0ID0gdGVtcC5wb3J0X2xpc3Quc3BsaXQoJywnKTsKICAgICAgdmFyIHBsaXN0ID0gW107CgogICAgICBpZiAodGVtcC51c2VyX3BvcnQgIT0gMCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcG9ydF9saXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgaXRlbSA9IHBvcnRfbGlzdFtpXS50cmltKCk7CgogICAgICAgICAgaWYgKGl0ZW0gIT0gIiIpIHsKICAgICAgICAgICAgcGxpc3QucHVzaChOdW1iZXIoaXRlbSkpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSAvLyBsZXQgcHV0RGF0YSA9IHsKICAgICAgLy8gICAgIHRhc2tfaWQ6IHRoaXMudGFza19pZCwgbmFtZTogdGVtcC5uYW1lLCBwb3J0X2xpc3Q6IHBsaXN0LCB0YXJnZXQ6IHRlbXAudGFyZ2V0LCByZWN1cnNpb246IHRlbXAucmVjdXJzaW9uLCB1c2VyOiAnQWRtaW4nLAogICAgICAvLyAgICAgb3Blbl93ZWI6IHRlbXAub3Blbl93ZWIsIG9wZW5fcG9jOiB0ZW1wLm9wZW5fcG9jLCBvcGVuX2F1dGg6IHRlbXAub3Blbl9hdXRoLCB1c2VyX3BvcnQ6IHRlbXAudXNlcl9wb3J0CiAgICAgIC8vIH0KICAgICAgLy8yLuiwg0FQSeaOpeWPowoKCiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6ICJXYXJuaW5nIiwKICAgICAgICBtZXNzYWdlOiAi5o6l5Y+j5pyq5a6e546wIiwKICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgfSk7IC8vIFB1dERpc2NvdmVyeShwdXREYXRhKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAvLyAgICAgdGhpcy5zdWJtaXRCdG5EaXNhYmxlZCA9IGZhbHNlOwogICAgICAvLyAgICAgdGhpcy4kbm90aWZ5KHsgdGl0bGU6IHJlc3BvbnNlLmRhdGEsIG1lc3NhZ2U6ICJVcGRhdGUgU3VjY2Vzc2Z1bGx5IiwgdHlwZTogInN1Y2Nlc3MiLCBkdXJhdGlvbjogNTAwMH0pOwogICAgICAvLyAgICAgdGhpcy5jbG9zZUNoaWxkUGFnZSgpCiAgICAgIC8vIH0pLmNhdGNoKCgpID0+IHsKICAgICAgLy8gICAgIHRoaXMuc3VibWl0QnRuRGlzYWJsZWQgPSBmYWxzZTsKICAgICAgLy8gICAgIHRoaXMuJG5vdGlmeSh7IHRpdGxlOiAiRmFpbGVkIiwgbWVzc2FnZTogIkZhaWxlZCBVcGRhdGUiLCB0eXBlOiAiZXJyb3IiLCBkdXJhdGlvbjogNTAwMH0pOwogICAgICAvLyB9KTsKICAgIH0sCiAgICAvL+WIm+W7uuS7u+WKoQogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5mb3JtQ2hlY2soKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5zdWJtaXRCdG5EaXNhYmxlZCA9IHRydWU7IC8vMS7nu4Too4XmlbDmja4KCiAgICAgIHZhciB0ZW1wID0gdGhpcy5mb3JtOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICBuYW1lOiB0ZW1wLm5hbWUsCiAgICAgICAgdGFyZ2V0X2xpc3Q6IHRlbXAudGFyZ2V0X2xpc3QsCiAgICAgICAgcmVjdXJzaW9uOiB0ZW1wLnJlY3Vyc2lvbiwKICAgICAgICBwb2Nfc2NhbjogdGVtcC5wb2Nfc2NhbiwKICAgICAgICB3ZWJfc2NhbjogdGVtcC53ZWJfc2NhbiwKICAgICAgICBhdXRoX3NjYW46IHRlbXAuYXV0aF9zY2FuLAogICAgICAgIHRyYXBfc2NhbjogdGVtcC50cmFwX3NjYW4KICAgICAgfTsgLy8yLuiwg0FQSeaOpeWPowoKICAgICAgVGFza0FkZChkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5zdWJtaXRCdG5EaXNhYmxlZCA9IGZhbHNlOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAgX3RoaXMyLiRub3RpZnkoewogICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgIG1lc3NhZ2U6ICLmt7vliqDmiJDlip8iICsgcmVzcG9uc2UuZXJybXNnICsgcmVzcG9uc2UuZGF0YS50YXNrX2lkLAogICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMyLmNsb3NlQ2hpbGRQYWdlKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuc3VibWl0QnRuRGlzYWJsZWQgPSBmYWxzZTsKCiAgICAgICAgX3RoaXMyLiRub3RpZnkoewogICAgICAgICAgdGl0bGU6ICJGYWlsZWQiLAogICAgICAgICAgbWVzc2FnZTogIua3u+WKoOWksei0pSIsCiAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5L+u5pS55pe277yM6I635Y+W5pen5L+h5oGvCiAgICBnZXREZXRhaWw6IGZ1bmN0aW9uIGdldERldGFpbChpZCkgewogICAgICBjb25zb2xlLmxvZyhpZCk7CiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6ICJXYXJuaW5nIiwKICAgICAgICBtZXNzYWdlOiAi5o6l5Y+j5pyq5a6e546wIiwKICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgfSk7IC8vIERpc2NvdmVyeUluZm8oeyBpZDogaWQgfSkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgLy8gICAgIGxldCBkYXRhID0gcmVzcG9uc2UuZGF0YQogICAgICAvLyAgICAgdGhpcy5mb3JtID0gewogICAgICAvLyAgICAgICAgIG5hbWU6IGRhdGEubmFtZSwgcG9ydF9saXN0OiBkYXRhLnBvcnRfbGlzdC5qb2luKCcsICcpLAogICAgICAvLyAgICAgICAgIHRhcmdldDogZGF0YS50YXJnZXQsIHJlY3Vyc2lvbjogZGF0YS5yZWN1cnNpb24sCiAgICAgIC8vICAgICAgICAgb3Blbl93ZWI6IGRhdGEub3Blbl93ZWIsIG9wZW5fcG9jOiBkYXRhLm9wZW5fcG9jLAogICAgICAvLyAgICAgICAgIG9wZW5fYXV0aDogZGF0YS5vcGVuX2F1dGgsIHVzZXJfcG9ydDogZGF0YS51c2VyX3BvcnQsCiAgICAgIC8vICAgICB9CiAgICAgIC8vIH0pLmNhdGNoKCgpID0+IHsKICAgICAgLy8gICAgIHRoaXMuc3VibWl0QnRuRGlzYWJsZWQgPSBmYWxzZTsKICAgICAgLy8gICAgIHRoaXMuJG5vdGlmeSh7dGl0bGU6ICdGYWlsZWQnLCBtZXNzYWdlOiAiRmFpbGVkIEdldCBBc3NldFRhc2sgaW5mbyIsIHR5cGU6ICJlcnJvciIsIGR1cmF0aW9uOiA1MDAwfSk7CiAgICAgIC8vIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mixin-components-container\">\n        <el-row>\n            <el-card class=\"box-card\">\n                <div slot=\"header\" class=\"clearfix\">\n                    <span>{{title}}</span>\n                </div>\n                <div style=\"margin-bottom:50px;\">\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n                        <el-form-item v-if=\"task_id\" label=\"任务名\" class=\"is-required\">\n                            <el-input v-model=\"form.name\" style=\"width: 50%\" disabled></el-input>\n                        </el-form-item>\n                        <el-form-item v-else label=\"任务名\" class=\"is-required\">\n                            <el-input v-model=\"form.name\" style=\"width: 50%\" maxlength=\"20\" minlength=\"3\" placeholder=\"中文、字母、数字、下划线等至少3个字符\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"探测目标\" class=\"is-required\">\n                            <el-input v-model=\"form.target_list\" style=\"width: 50%\" maxlength=\"1024\" minlength=\"3\" placeholder=\"IP, 域名, (IP、域名)混合列表, 网段等其中之一\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"扫描周期\">\n                            <el-select v-model=\"form.recursion\" placeholder=\"请选择\" style=\"width:200px\">\n                                <el-option label=\"一次\" :value=\"0\"></el-option><el-option label=\"每天\" :value=\"1\"></el-option>\n                                <el-option label=\"每周\" :value=\"7\"></el-option><el-option label=\"每月\" :value=\"30\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"渗透规则\" class=\"is-required\">\n                            <el-input-number v-model=\"form.rule_id\" :min=\"1\" :max=\"50\"></el-input-number>\n                        </el-form-item>\n                        <el-form-item label=\"Web渗透\">\n                            <el-radio-group v-model=\"form.web_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item label=\"漏洞扫描\">\n                            <el-radio-group v-model=\"form.poc_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item label=\"权限爆破\">\n                            <el-radio-group v-model=\"form.auth_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item label=\"蜜罐识别\">\n                            <el-radio-group v-model=\"form.trap_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n                            <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit()\">立即创建</el-button>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </el-card>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport { TaskAdd } from \"@/api/task\"\n\nexport default {\n    data() {\n        return {\n        isEditPage: false, //是创建还是修改任务的页面？\n        submitBtnDisabled: false,\n        title: \"创建渗透任务\",\n        form: { // 创建任务提交的表单\n            \"auth_scan\": 0,\n            \"name\": \"\",\n            \"poc_scan\": 0,\n            \"recursion\": 0,\n            \"target_list\": \"\",\n            \"trap_scan\": 0,\n            \"rule_id\": 0,\n            \"web_scan\": 0\n        },\n        task_id: undefined,\n    };\n  },\n  created() {\n        let id = this.$route.query.id\n        if (id) { //点击修改页面的跳转id uri参数(?id=64)\n            // 如果有id,查DB进行赋值\n            this.title = \"修改探测任务\"\n            this.isEditPage = true\n            this.isLoading = true\n            this.task_id = id\n            this.getDetail(id)\n        }\n  },\n    methods: {\n        // 表格格式检查\n        formCheck() {\n            if (this.form.name.trim() == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return false }\n            if (this.form.target_list.trim() == \"\") { this.$message({ message: \"目标必填\", type: \"warning\" }); return false }\n            return true\n        },\n        // 关闭子页\n        closeChildPage() {\n            this.$router.go(-1)\n            this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n            this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n        },\n        // 更新任务\n        onUpdate() {\n            if (!this.formCheck()) { return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let temp = this.form\n            let port_list = temp.port_list.split(',')\n            let plist = []\n            if (temp.user_port!=0){\n                for (let i=0; i<port_list.length; i++){\n                    let item = port_list[i].trim()\n                    if (item != \"\"){plist.push(Number(item))}\n                }\n            }\n            // let putData = {\n            //     task_id: this.task_id, name: temp.name, port_list: plist, target: temp.target, recursion: temp.recursion, user: 'Admin',\n            //     open_web: temp.open_web, open_poc: temp.open_poc, open_auth: temp.open_auth, user_port: temp.user_port\n            // }\n            //2.调API接口\n            this.$notify({ title: \"Warning\", message: \"接口未实现\", type: \"warning\", duration: 5000});\n            // PutDiscovery(putData).then((response) => {\n            //     this.submitBtnDisabled = false;\n            //     this.$notify({ title: response.data, message: \"Update Successfully\", type: \"success\", duration: 5000});\n            //     this.closeChildPage()\n            // }).catch(() => {\n            //     this.submitBtnDisabled = false;\n            //     this.$notify({ title: \"Failed\", message: \"Failed Update\", type: \"error\", duration: 5000});\n            // });\n        },\n        //创建任务\n        onSubmit() {\n            if (!this.formCheck()) { return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let temp = this.form\n            \n            let data = {\n                name: temp.name, target_list: temp.target_list, recursion: temp.recursion, poc_scan: temp.poc_scan,\n                web_scan: temp.web_scan, auth_scan: temp.auth_scan, trap_scan: temp.trap_scan,\n            }\n\n            //2.调API接口\n            TaskAdd(data).then((response) => {\n                this.submitBtnDisabled = false;\n                console.log(response)\n                this.$notify({ title: \"Success\", message: \"添加成功\" + response.errmsg + response.data.task_id, type: \"success\", duration: 5000, });\n                this.closeChildPage()\n            }).catch(() => {\n                this.submitBtnDisabled = false;\n                this.$notify({title: \"Failed\", message: \"添加失败\", type: \"error\", duration: 5000});\n            });\n        },\n        // 修改时，获取旧信息\n        getDetail(id) {\n            console.log(id)\n            this.$notify({ title: \"Warning\", message: \"接口未实现\", type: \"warning\", duration: 5000});\n            // DiscoveryInfo({ id: id }).then((response) => {\n            //     let data = response.data\n            //     this.form = {\n            //         name: data.name, port_list: data.port_list.join(', '),\n            //         target: data.target, recursion: data.recursion,\n            //         open_web: data.open_web, open_poc: data.open_poc,\n            //         open_auth: data.open_auth, user_port: data.user_port,\n            //     }\n            // }).catch(() => {\n            //     this.submitBtnDisabled = false;\n            //     this.$notify({title: 'Failed', message: \"Failed Get AssetTask info\", type: \"error\", duration: 5000});\n            // });\n        },\n    }\n}\n</script>\n\n<style>\n.mixin-components-container {\n    background-color: #f0f2f5;\n    padding: 30px;\n    min-height: calc(100vh - 84px);\n}\n.text {\n    font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n    display: table;\n    content: \"\";\n}\n.clearfix:after {\n    clear: both;\n}\n.box-card-in {\n    width: 60%;\n}\n.dump-box {\n    font-weight: 700;\n    color: #606266;\n}\n</style>"],"sourceRoot":"src/views/asset"}]}