{"remainingRequest":"/home/views/buoy-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/buoy-view/src/views/asset/task.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/views/buoy-view/src/views/asset/task.vue","mtime":1611741447510},{"path":"/home/views/buoy-view/node_modules/css-loader/dist/cjs.js","mtime":1610763497591},{"path":"/home/views/buoy-view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610763501867},{"path":"/home/views/buoy-view/node_modules/postcss-loader/src/index.js","mtime":1610763501808},{"path":"/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js","mtime":1610763497078},{"path":"/home/views/buoy-view/node_modules/vue-loader/lib/index.js","mtime":1610763501867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWl4aW4tY29tcG9uZW50cy1jb250YWluZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNTsKICAgIHBhZGRpbmc6IDMwcHg7CiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gODRweCk7Cn0KLnRleHQgewogICAgZm9udC1zaXplOiAxNHB4Owp9Ci5jbGVhcmZpeDpiZWZvcmUsCi5jbGVhcmZpeDphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwp9Ci5jbGVhcmZpeDphZnRlciB7CiAgICBjbGVhcjogYm90aDsKfQouYm94LWNhcmQtaW4gewogICAgd2lkdGg6IDYwJTsKfQouZHVtcC1ib3ggewogICAgZm9udC13ZWlnaHQ6IDcwMDsKICAgIGNvbG9yOiAjNjA2MjY2Owp9Cg=="},{"version":3,"sources":["task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task.vue","sourceRoot":"src/views/asset","sourcesContent":["<template>\n    <div class=\"mixin-components-container\">\n        <el-row>\n            <el-card class=\"box-card\">\n                <div slot=\"header\" class=\"clearfix\">\n                    <span>{{title}}</span>\n                </div>\n                <div style=\"margin-bottom:50px;\">\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n                        <el-form-item v-if=\"task_id\" label=\"任务名\" class=\"is-required\">\n                            <el-input v-model=\"form.name\" style=\"width: 50%\" disabled></el-input>\n                        </el-form-item>\n                        <el-form-item v-else label=\"任务名\" class=\"is-required\">\n                            <el-input v-model=\"form.name\" style=\"width: 50%\" maxlength=\"20\" minlength=\"3\" placeholder=\"中文、字母、数字、下划线等至少3个字符\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"探测目标\" class=\"is-required\">\n                            <el-input v-model=\"form.target_list\" style=\"width: 50%\" maxlength=\"1024\" minlength=\"3\" placeholder=\"IP, 域名, (IP、域名)混合列表, 网段等其中之一\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"扫描周期\">\n                            <el-select v-model=\"form.recursion\" placeholder=\"请选择\" style=\"width:200px\">\n                                <el-option label=\"一次\" :value=\"0\"></el-option><el-option label=\"每天\" :value=\"1\"></el-option>\n                                <el-option label=\"每周\" :value=\"7\"></el-option><el-option label=\"每月\" :value=\"30\"></el-option>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"渗透规则\" class=\"is-required\">\n                            <el-input-number v-model=\"form.rule_id\" :min=\"1\" :max=\"50\"></el-input-number>\n                        </el-form-item>\n                        <el-form-item label=\"Web渗透\">\n                            <el-radio-group v-model=\"form.web_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item label=\"漏洞扫描\">\n                            <el-radio-group v-model=\"form.poc_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item label=\"权限爆破\">\n                            <el-radio-group v-model=\"form.auth_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item label=\"蜜罐识别\">\n                            <el-radio-group v-model=\"form.trap_scan\"><el-radio :label=\"0\">关闭</el-radio><el-radio :label=\"1\">开启</el-radio></el-radio-group>\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n                            <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit()\">立即创建</el-button>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </el-card>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport { TaskAdd } from \"@/api/task\"\n\nexport default {\n    data() {\n        return {\n        isEditPage: false, //是创建还是修改任务的页面？\n        submitBtnDisabled: false,\n        title: \"创建渗透任务\",\n        form: { // 创建任务提交的表单\n            \"auth_scan\": 0,\n            \"name\": \"\",\n            \"poc_scan\": 0,\n            \"recursion\": 0,\n            \"target_list\": \"\",\n            \"trap_scan\": 0,\n            \"rule_id\": 0,\n            \"web_scan\": 0\n        },\n        task_id: undefined,\n    };\n  },\n  created() {\n        let id = this.$route.query.id\n        if (id) { //点击修改页面的跳转id uri参数(?id=64)\n            // 如果有id,查DB进行赋值\n            this.title = \"修改探测任务\"\n            this.isEditPage = true\n            this.isLoading = true\n            this.task_id = id\n            this.getDetail(id)\n        }\n  },\n    methods: {\n        // 表格格式检查\n        formCheck() {\n            if (this.form.name.trim() == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return false }\n            if (this.form.target_list.trim() == \"\") { this.$message({ message: \"目标必填\", type: \"warning\" }); return false }\n            return true\n        },\n        // 关闭子页\n        closeChildPage() {\n            this.$router.go(-1)\n            this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n            this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n        },\n        // 更新任务\n        onUpdate() {\n            if (!this.formCheck()) { return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let temp = this.form\n            let port_list = temp.port_list.split(',')\n            let plist = []\n            if (temp.user_port!=0){\n                for (let i=0; i<port_list.length; i++){\n                    let item = port_list[i].trim()\n                    if (item != \"\"){plist.push(Number(item))}\n                }\n            }\n            // let putData = {\n            //     task_id: this.task_id, name: temp.name, port_list: plist, target: temp.target, recursion: temp.recursion, user: 'Admin',\n            //     open_web: temp.open_web, open_poc: temp.open_poc, open_auth: temp.open_auth, user_port: temp.user_port\n            // }\n            //2.调API接口\n            this.$notify({ title: \"Warning\", message: \"接口未实现\", type: \"warning\", duration: 5000});\n            // PutDiscovery(putData).then((response) => {\n            //     this.submitBtnDisabled = false;\n            //     this.$notify({ title: response.data, message: \"Update Successfully\", type: \"success\", duration: 5000});\n            //     this.closeChildPage()\n            // }).catch(() => {\n            //     this.submitBtnDisabled = false;\n            //     this.$notify({ title: \"Failed\", message: \"Failed Update\", type: \"error\", duration: 5000});\n            // });\n        },\n        //创建任务\n        onSubmit() {\n            if (!this.formCheck()) { return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let temp = this.form\n            \n            let data = {\n                name: temp.name, target_list: temp.target_list, recursion: temp.recursion, poc_scan: temp.poc_scan,\n                web_scan: temp.web_scan, auth_scan: temp.auth_scan, trap_scan: temp.trap_scan,\n            }\n\n            //2.调API接口\n            TaskAdd(data).then((response) => {\n                this.submitBtnDisabled = false;\n                console.log(response)\n                this.$notify({ title: \"Success\", message: \"添加成功\" + response.errmsg + response.data.task_id, type: \"success\", duration: 5000, });\n                this.closeChildPage()\n            }).catch(() => {\n                this.submitBtnDisabled = false;\n                this.$notify({title: \"Failed\", message: \"添加失败\", type: \"error\", duration: 5000});\n            });\n        },\n        // 修改时，获取旧信息\n        getDetail(id) {\n            console.log(id)\n            this.$notify({ title: \"Warning\", message: \"接口未实现\", type: \"warning\", duration: 5000});\n            // DiscoveryInfo({ id: id }).then((response) => {\n            //     let data = response.data\n            //     this.form = {\n            //         name: data.name, port_list: data.port_list.join(', '),\n            //         target: data.target, recursion: data.recursion,\n            //         open_web: data.open_web, open_poc: data.open_poc,\n            //         open_auth: data.open_auth, user_port: data.user_port,\n            //     }\n            // }).catch(() => {\n            //     this.submitBtnDisabled = false;\n            //     this.$notify({title: 'Failed', message: \"Failed Get AssetTask info\", type: \"error\", duration: 5000});\n            // });\n        },\n    }\n}\n</script>\n\n<style>\n.mixin-components-container {\n    background-color: #f0f2f5;\n    padding: 30px;\n    min-height: calc(100vh - 84px);\n}\n.text {\n    font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n    display: table;\n    content: \"\";\n}\n.clearfix:after {\n    clear: both;\n}\n.box-card-in {\n    width: 60%;\n}\n.dump-box {\n    font-weight: 700;\n    color: #606266;\n}\n</style>"]}]}