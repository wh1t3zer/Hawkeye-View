{"remainingRequest":"/home/views/buoy-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/buoy-view/src/views/asset/info.vue?vue&type=style&index=1&id=5f928787&lang=scss&scoped=true&","dependencies":[{"path":"/home/views/buoy-view/src/views/asset/info.vue","mtime":1612334164772},{"path":"/home/views/buoy-view/node_modules/css-loader/dist/cjs.js","mtime":1610763497591},{"path":"/home/views/buoy-view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610763501867},{"path":"/home/views/buoy-view/node_modules/postcss-loader/src/index.js","mtime":1610763501808},{"path":"/home/views/buoy-view/node_modules/sass-loader/dist/cjs.js","mtime":1610763500422},{"path":"/home/views/buoy-view/node_modules/cache-loader/dist/cjs.js","mtime":1610763497078},{"path":"/home/views/buoy-view/node_modules/vue-loader/lib/index.js","mtime":1610763501867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhc2hib2FyZC1lZGl0b3ItY29udGFpbmVyIHsKICBwYWRkaW5nOiA0cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOSwgMjM5LCAyNDApOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgLmdpdGh1Yi1jb3JuZXIgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAwcHg7CiAgICBib3JkZXI6IDA7CiAgICByaWdodDogMDsKICB9CgogIC5jaGFydC13cmFwcGVyIHsKICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICBwYWRkaW5nOiAxNnB4IDE2cHggMDsKICAgIG1hcmdpbi1ib3R0b206IDMycHg7CiAgfQp9CgpAbWVkaWEgKG1heC13aWR0aDoxMDI0cHgpIHsKICAuY2hhcnQtd3JhcHBlciB7CiAgICBwYWRkaW5nOiA4cHg7CiAgfQp9Ci5wYWdlLWhlYWRlciwgLmluZm8tY29udGVudHsKICAgcGFkZGluZzogMSU7CiAgIGJhY2tncm91bmQtY29sb3I6I2ZmZjsgCn0KLmluZm8tY29udGVudHsKICAgIG1hcmdpbi10b3A6IDElOwp9Cgo="},{"version":3,"sources":["info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"info.vue","sourceRoot":"src/views/asset","sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n      <div class=\"app-container\">\n           <div class=\"page-header\">\n                <p>xxxxx</p>\n           </div>\n           <div class=\"info-content\">\n                <p>hahaha</p>\n           </div>\n      </div>\n  </div>\n</template>\n\n<script>\n// import { InfoDetail } from \"@/api/instance\"\nimport waves from \"@/directive/waves\";\n\nexport default {\n    name: \"instance_info\",\n    directives: { waves },\n    data() {\n      return {\n        pannel1: true,\n        pannel2: true,\n        tableKey: 0,\n        tableKey1: 1,\n        banner: [],\n        dialog: false,\n        web_dialog: false,\n        service_loading: true,\n        form: {\n            \"_id\": \"string\",\n            \"create_at\": \"string\",\n            \"host\": \"string\",\n            \"hostname\": \"string\",\n            \"hostname_type\": \"string\",\n            \"is_delete\": 0,\n            \"mac\": \"string\",\n            \"name\": \"string\",\n            \"port_list\": [0],\n            \"portid_list\": [\"string\"], // [-]\n            \"target\": \"string\",\n            \"update_at\": \"string\",\n            \"vendor\": \"string\"\n        },\n        list: [],\n        open_port:[],\n        vul_info:{},\n      };\n    },\n    created(){\n        let id = this.$route.query.id\n        this.getDetail(id)\n    },\n    methods: {\n        tableRowClassName({row}) {\n            if (row.severity === 3) {return 'danger-row'}\n            else if (row.severity === 2) {return 'warning-row'}\n            return 'success-row';\n        },\n        vul_detail(row){\n            this.dialog = true\n            this.vul_info = row\n        },\n        getDetail(id) {\n            let query = { instance_id: id }\n            // InfoDetail(query).then((response) => {\n                \n            //     setTimeout(() => { this.isLoading = false; this.service_loading = false }, 1 * 1000)\n            // })\n        },\n    }\n};\n</script>\n\n<style>\npre {\n    white-space: pre-wrap;\n    word-wrap: break-word;\n}\n.el-table .warning-row {\n    background: rgb(255, 247, 233);\n}\n\n.el-table .success-row {\n    background: #f3fdee;\n}\n.el-table .danger-row {\nbackground: #fde7e7;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 4px;\n  background-color: rgb(239, 239, 240);\n  position: relative;\n\n  .github-corner {\n    position: absolute;\n    top: 0px;\n    border: 0;\n    right: 0;\n  }\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n@media (max-width:1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n.page-header, .info-content{\n   padding: 1%;\n   background-color:#fff; \n}\n.info-content{\n    margin-top: 1%;\n}\n\n</style>"]}]}